% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spartacus_multirun.R
\name{spartacus_multirun}
\alias{spartacus_multirun}
\title{Multiple runs of SpaRTaCUS}
\usage{
spartacus_multirun(
  data,
  assay = NULL,
  coordinates = NULL,
  K,
  R = NULL,
  unsupervised = TRUE,
  spot.labels = NULL,
  approximated = TRUE,
  n.neighbors = 20,
  Alpha = 10,
  Tau = 1,
  nstart = 5,
  max.iter = 1000,
  column.allocation.algorithm = "CEM",
  Metropolis.iterations = 150,
  conv.criterion = list(iterations = 10, epsilon = 1e-04)
)
}
\arguments{
\item{data}{either a `SpatialExperiment` object or a matrix containing the experiment.}

\item{assay}{if `class(data) == "SpatialExperiment"`, it takes either the name or the index of the assay to be used.}

\item{coordinates}{if `is.matrix(data)`, it takes the matrix of spatial coordinates of dimension `ncol(data)` x 2.}

\item{K}{the number of row clusters (only when `input.values == NULL`);}

\item{R}{the number of column clusters (only when `input.values == NULL`);}

\item{unsupervised}{set if the columns clustering has to be performed or not, the default is `TRUE`. If `FALSE`, spot.labels must be provided.}

\item{spot.labels}{a vector containing the labels of column cluster, the default is `NULL`.}

\item{approximated}{if `TRUE` the spartacus method is performed (default), else if `FALSE` the spartaco method is performed.}

\item{n.neighbors}{the number of nearest neighbors for fitting the nearest-neighbor Gaussian process (NNGP) model. The default value is 20. ??Da aggiungere commento sulla scelta di m??}

\item{Alpha}{the constraint for the Alpha parameters. ??Da aggiungere nei dettagli le caratteristiche del vincolo, se lasciamo la libertà di farlo??}

\item{Tau}{the constraint for the Tau parameters. ??Da aggiungere nei dettagli le caratteristiche del vincolo, se lasciamo la libertà di farlo??}

\item{nstart}{the number of parallel runs of the estimation algorithm.}

\item{max.iter}{the maximum number of iterations the estimation algorithm is run.}

\item{Metropolis.iterations}{the number of iteration done in the column clustering estimation.}

\item{conv.criterion}{a list containing the parameters that define a converge criterion (see **Details**).}
}
\value{
An object of class `spartacus` with the parameter estimates, the row clustering labels, the log-likelihood value at each iteration, the ICL, the data matrix and the coordinates matrix, and the clustering uncertainty.
}
\description{
This function returns the estimated model parameters and the co-clustering labels obtained after running SpaRTaCUS multiple times (parallel options available).
}
\details{
This function allows to run the `spartacus` model starting from multiple starting points simultaneously and select the one with the highest likelihood.
It is possible to run this function using multiple cores; to do so, use the `multicore` function package `future` (see **Examples**).

??Da aggiornare??
}
\examples{
library(spartacus)

# First, create the data matrix:
n <- p <- 300
K <- R <- 3
x <- matrix(runif(n*p), n, p)
coordinates <- matrix(runif(2*p), p, 2)

# Set the number of cores to be used for the computations. In this example, we use 3 cores.
future::plan(future::multisession(workers = 3))
output <- spartacus_multirun(data = x, coordinates = coordinates, K = K, R = R, max.iter = 1000)

}
